plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "com.eden.orchidPlugin" version "0.21.0"
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'maven-publish'
}

group 'com.github.quentus123'
version '0.0.1-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
    maven { url = "https://kotlin.bintray.com/kotlinx/" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.java-websocket:Java-WebSocket:1.5.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5"
    implementation "com.beust:klaxon:5.0.1"
    compile group: 'com.auth0', name: 'java-jwt', version: '3.10.3'
    testCompile group: 'junit', name: 'junit', version: '4.12'

    orchidRuntime "io.github.javaeden.orchid:OrchidDocs:0.21.0"
    orchidRuntime "io.github.javaeden.orchid:OrchidKotlindoc:0.21.0"
    orchidRuntime "io.github.javaeden.orchid:OrchidPluginDocs:0.21.0"
}

orchid {
    theme = "Editorial"
    baseUrl = "https://quentus123.github.io/Comy/"
    version = "0.0.1-SNAPSHOT"
}

publishing {

    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
    }

    publications {
        maven(MavenPublication) {
            groupId = 'com.github.quentus123'
            artifactId = 'comy'
            version = '0.0.1-SNAPSHOT'
            from components.java

            pom {
                name = 'Comy'
                description = 'A library to make server creation easy.'
                url = 'https://github.com/Quentus123/Comy'
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.fr.html'
                    }
                }
                developers {
                    developer {
                        id = 'quentus123'
                        name = 'Quentin Diebold'
                        email = 'q.diebold@etu.unistra.fr'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:Quentus123/Comy'
                    developerConnection = 'scm:git@github.com:Quentus123/Comy'
                    url = 'https://github.com/Quentus123/Comy'
                }
            }
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

jar {
    manifest {
        attributes("Manifest-Version": "1.0",
                "Main-Class": "MainKt")
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveClassifier.set('all')
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}